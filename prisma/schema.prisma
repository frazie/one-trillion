// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User { //this is the user schema which will have the needed field for keeping information collected for the application
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  hashedPassword String?
  createdAt DateTime @default(now())
  referrer String?
  referralId String? 

  accounts Account[]
  referrals Referral[]
  treesPlanted Trees[]
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade )

  @@unique([provider, providerAccountId])
}

model Referral {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  referralLink String @db.String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade) 
}

model Trees {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId 
  tree Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade) 
}